@model mobilehome.insure.Areas.Admin.Models.ParkViewModel

@*<div class="row">

    </div>*@
<div class="portlet-title">
    <div class="caption">Add / Edit State</div>
</div>
<div class="portlet-body form">
    <form method="post" action="/Park/edit" role="form" class="horizontal-form">
        <div class="form-body">
            <div class="row">
                @Html.HiddenFor(x => x.CurrentPark.Id)
                <div class="col-md-8">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.ParkName, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.ParkName, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.ParkName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.PhysicalAddress, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.PhysicalAddress, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.PhysicalAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.PhysicalAddress2, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.PhysicalAddress2, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.PhysicalAddress2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.PhysicalCounty, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.PhysicalCounty, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.PhysicalCounty, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.PhysicalStateId, new { @class = "control-label" })
                        @Html.DropDownListFor(x => x.CurrentPark.PhysicalStateId, new SelectList(Model.States, "Id", "Name"), new { @placeholder = "Select a State", @class = "form-control", style = "width:100%" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.PhysicalStateId, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*</div>
                    <div class="row">*@
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.PhysicalCity, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.PhysicalCity, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.PhysicalCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.PhysicalZip, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.PhysicalZip, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.PhysicalZip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OfficePhone, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OfficePhone, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OfficePhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OfficeFax, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OfficeFax, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OfficeFax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OfficeMail, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OfficeMail, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OfficeMail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Website, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.Website, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.Website, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*</div>
                    <div class="row">*@
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.SpacesToRent, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.SpacesToRent, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.SpacesToRent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.SpacesToOwn, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.SpacesToOwn, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.SpacesToOwn, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Contact, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.Contact, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.Contact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Position, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.Position, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.Position, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingAddress, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.MailingAddress, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingAddress2, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.MailingAddress2, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingAddress2, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*</div>

                    <div class="row">*@
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingStateId, new { @class = "control-label" })
                        @Html.DropDownListFor(x => x.CurrentPark.MailingStateId, new SelectList(Model.States, "Id", "Name"), new { @placeholder = "Select a State", @class = "form-control", style = "width:100%" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingStateId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="row">                
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingCity, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.MailingCity, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingZip, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.MailingZip, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingZip, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <label for="CurrentPark_IsActive">
                            IsActive
                            @Html.CheckBoxFor(x => x.CurrentPark.IsActive, new { @class = "form-control", style = "height: auto" })
                        </label>
                        @Html.ValidationMessageFor(x => x.CurrentPark.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-actions">
            <div class="col-md-4 col-md-offset-5">
                <button type="button" class="btn btn-default"
                        data-dismiss="modal">
                    Cancel
                </button>
                <button type="submit" id="approve-btn"
                        class="btn btn-danger">
                    Save
                </button>
            </div>
        </div>
    </form>
</div>


<script type="text/javascript">
    $(function () {
        $('form').submit(function () {
            if ($(this).valid())
                $('#modal-container').modal('hide');
        });

        //$("#CurrentPark_StateId").select2({
        $("#CurrentPark_PhysicalStateId,#CurrentPark_MailingStateId").select2({
            allowClear: true
        });

        $.validator.unobtrusive.parse("form");
    });

</script>