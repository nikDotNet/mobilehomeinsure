@model mobilehome.insure.Areas.Admin.Models.ParkViewModel

<div class="portlet-title">
    <div class="caption">Add / Edit State</div>
</div>
<div class="portlet-body">
    <form method="post" action="/Park/edit" role="form">
        <div class="form-body">
            <div class="row" style="margin-bottom: 15px;">
                @Html.HiddenFor(x => x.CurrentPark.Id)
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Name, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.Name, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Phone, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.Phone, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Spaces, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.Spaces, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.Spaces, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom: 15px;">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Position, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.Position, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.ContactName, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.ContactName, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.ContactName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Zip4, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.Zip4, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.Zip4, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Address, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(x => x.CurrentPark.Address, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.StateId, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(x => x.CurrentPark.StateId, new SelectList(Model.States, "Id", "Name"), new { @placeholder = "Select a State", @class = "form-control", style = "width:100%" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.StateId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.City, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.City, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Zip, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.CurrentPark.Zip, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.Zip, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.IsActive, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.CheckBoxFor(x => x.CurrentPark.IsActive, new { @class = "form-control input-medium" })
                            @Html.ValidationMessageFor(x => x.CurrentPark.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            &nbsp;
        </div>
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <button type="button" class="btn btn-default"
                        data-dismiss="modal">
                    Cancel
                </button>
                <button type="submit" id="approve-btn"
                        class="btn btn-danger">
                    Save
                </button>
            </div>
        </div>

    </form>
</div>
<script type="text/javascript">
    $(function () {
        $('form').submit(function () {
            if ($(this).valid())
                $('#modal-container').modal('hide');
        });

        $("#StateId").select2({
            allowClear: true
        });

        $.validator.unobtrusive.parse("form");
    });

</script>