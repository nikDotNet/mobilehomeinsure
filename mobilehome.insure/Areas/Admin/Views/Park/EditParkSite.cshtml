@using System.Web.WebPages.Html
@model mobilehome.insure.Areas.Admin.Models.ParkSitesViewModel
@{
    Layout = null;
}
<div class="portlet-title">
    <div class="caption">Add / Edit Park Site</div>
</div>
<div class="portlet-body form">
    <form method="post" action="/Park/editParkSite" role="form" class="horizontal-form">
        <div class="form-body">
            <div class="row">
                @Html.HiddenFor(x => x.CurrentParkSite.Id)
                <div class="col-md-8">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentParkSite.Park.ParkName, new { @class = "control-label" })
                        @Html.DropDownListFor(x => x.CurrentParkSite.PhysicalStateId, new System.Web.Mvc.SelectList(Model.States, "Id", "Name"), new { id = "ddlPhysicalStateId", @placeholder = "Select a State", @class = "form-control", style = "width:100%" })
                        @Html.TextBoxFor(x => x.CurrentPark.ParkName, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.ParkName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Physical address-->
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentParkSite.PhysicalAddress1, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentParkSite.PhysicalAddress1, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentParkSite.PhysicalAddress1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentParkSite.PhysicalAddress2, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentParkSite.PhysicalAddress2, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentParkSite.PhysicalAddress2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentParkSite.PhysicalStateId, new { @class = "control-label" })
                        @Html.DropDownListFor(x => x.CurrentParkSite.PhysicalStateId, new System.Web.Mvc.SelectList(Model.States, "Id", "Name"), new { id = "ddlPhysicalStateId", @placeholder = "Select a State", @class = "form-control", style = "width:100%" })
                        @Html.ValidationMessageFor(x => x.CurrentParkSite.PhysicalStateId, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*</div>
                    <div class="row">*@
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentParkSite.PhysicalCity, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentParkSite.PhysicalCity, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentParkSite.PhysicalCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentParkSite.PhysicalZip, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentParkSite.PhysicalZip, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentParkSite.PhysicalZip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Mailing address-->
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingName, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.MailingName, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingAddress, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.MailingAddress, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingAddress2, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.MailingAddress2, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingAddress2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingStateId, new { @class = "control-label" })
                        @Html.DropDownListFor(x => x.CurrentPark.MailingStateId, new SelectList(Model.States, "Id", "Name"), new { id = "ddlMailingStateId", @placeholder = "Select a State", @class = "form-control", style = "width:100%" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingStateId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingCity, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.MailingCity, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.MailingZip, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.MailingZip, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.MailingZip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Owner address-->
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OwnerAddress, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.OwnerAddress, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OwnerAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OwnerAddress2, new { @class = "control-label" })
                        @Html.TextAreaFor(x => x.CurrentPark.OwnerAddress2, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OwnerAddress2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OwnerStateId, new { @class = "control-label" })
                        @Html.DropDownListFor(x => x.CurrentPark.OwnerStateId, new SelectList(Model.States, "Id", "Name"), new { id = "ddlOwnerStateId", @placeholder = "Select a State", @class = "form-control", style = "width:100%" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OwnerStateId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OwnerCity, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OwnerCity, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OwnerCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OwnerZip, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OwnerZip, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OwnerZip, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OwnerPhone, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OwnerPhone, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OwnerPhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OfficePhone, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OfficePhone, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OfficePhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OfficeFax, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OfficeFax, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OfficeFax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.OfficeMail, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.OfficeMail, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.OfficeMail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Website, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.Website, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.Website, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.SpacesToRent, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.SpacesToRent, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.SpacesToRent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.SpacesToOwn, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.SpacesToOwn, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.SpacesToOwn, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.ContactName1, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.ContactName1, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.ContactName1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.ContactName2, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.ContactName2, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.ContactName2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CurrentPark.Position, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.CurrentPark.Position, new { @class = "form-control input-medium" })
                        @Html.ValidationMessageFor(x => x.CurrentPark.Position, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="CurrentPark_IsActive" style="margin-left: 10px;">
                        IsActive
                        @Html.CheckBoxFor(x => x.CurrentPark.IsActive, new { @class = "form-control", style = "height: auto" })
                    </label>
                    @Html.ValidationMessageFor(x => x.CurrentPark.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-actions">
            <div class="col-md-4 col-md-offset-5">
                <button type="button" class="btn btn-default"
                        data-dismiss="modal">
                    Cancel
                </button>
                <button type="submit" id="approve-btn"
                        class="btn btn-danger">
                    Save
                </button>
            </div>
        </div>
    </form>
</div>